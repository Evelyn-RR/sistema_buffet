/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import com.itextpdf.kernel.events.PdfDocumentEvent;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.*;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Table;
import dao.GenericDAO;
import dao.OrcamentoDAO;
import dao.PacoteDAO;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import utils.TableModelCreator;
import utils.pdf.Footer;
import utils.pdf.Header;

/**
 *
 * @author vilyn
 */
public class Evento extends javax.swing.JFrame {

    /**
     * Creates new form Evento
     */
    
    private int idSelecionado;
    
    public Evento() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        btnConcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEvento = new javax.swing.JTable();
        btnImprimir = new javax.swing.JButton();
        btnRegistros = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Evento");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-detetive-16.png"))); // NOI18N
        jLabel6.setText("Busca:");

        jTextField5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnConcluir.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnConcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-selecionado-16.png"))); // NOI18N
        btnConcluir.setText("Concluir Evento");
        btnConcluir.setEnabled(false);
        btnConcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluirActionPerformed(evt);
            }
        });

        tblEvento.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblEvento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblEvento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEventoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEvento);

        btnImprimir.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-enviar-para-a-impressora-16.png"))); // NOI18N
        btnImprimir.setText("Imprimir relat√≥rio");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnRegistros.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnRegistros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-recibo-em-dinheiro-16.png"))); // NOI18N
        btnRegistros.setText("Registros de pagamentos");
        btnRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrosActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-editar-16.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-cancelar-16.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel7.setText("Lista de Eventos Cadastrados");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnRegistros)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnImprimir)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnEditar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnExcluir)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnConcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel7)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addComponent(btnRegistros)
                    .addComponent(btnConcluir))
                .addGap(58, 58, 58))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluirActionPerformed
        OrcamentoDAO orcamentodao = new OrcamentoDAO();
        entity.Orcamento orcamento = orcamentodao.selecionarPorCodigo(idSelecionado);
        
        Fluxo_Caixa fluxo = new Fluxo_Caixa(orcamento);
        fluxo.setVisible(true);
    }//GEN-LAST:event_btnConcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (idSelecionado > 0) {
            entity.Orcamento orcamento = new OrcamentoDAO().selecionarPorCodigo(idSelecionado);
            Novo_evento tela = new Novo_evento(null, true, orcamento, null, null, null, null);
            tela.setVisible(true);
            atualizarTabela();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrosActionPerformed
        if (idSelecionado > 0) {    
            entity.Lancamento lancamento = new dao.LancamentoDAO().selecionarPorCodigo(idSelecionado);
            Receitas_Despesas registro = new Receitas_Despesas(lancamento);
            registro.setVisible(true);
            atualizarTabela();
        }
    }//GEN-LAST:event_btnRegistrosActionPerformed

    private void tblEventoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEventoMouseClicked
        JTable tabela = (JTable) evt.getSource();
        int linha = tabela.rowAtPoint(evt.getPoint());
        
        for (int i = 0; i < tabela.getModel().getColumnCount(); i++) {
            String nomeColuna = tabela.getModel().getColumnName(i);
            if (nomeColuna.trim().equals("Id Orcamento")) {
                idSelecionado = Integer.parseInt(tabela.getValueAt(linha, i) + "");
                btnEditar.setEnabled(true);
                btnExcluir.setEnabled(true);
                btnConcluir.setEnabled(true);
                break;
            }
        }
        
    }//GEN-LAST:event_tblEventoMouseClicked

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir?", "Aten√ß√£o", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            OrcamentoDAO orcamentodao = new OrcamentoDAO();
            entity.Orcamento orcamento = orcamentodao.selecionarPorCodigo(idSelecionado);
            orcamentodao.excluir(orcamento);
            atualizarTabela();
            JOptionPane.showMessageDialog(this, "Exclu√çdo com sucesso", "Aten√ß√£o", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        atualizarTabela();
    }//GEN-LAST:event_formWindowActivated

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        String caminho = selecionarPasta();
        if (!caminho.equals("")) {
            if(gerarPDF(caminho, "evento")) abrirPDF(caminho, "evento");
            else JOptionPane.showMessageDialog(this, "Erro ao gerar PDF", "Erro", JOptionPane.ERROR_MESSAGE);
        }
//        Novo_evento ob = new Novo_evento(null, true, null, null, null, null, null);
//        DefaultTableModel model = (DefaultTableModel) tblProdutos1.getModel();
//
//        for (int i = ob.getLinhas(); i > 0 ; i--, idSelecionado--) {
//            entity.Pacote pacote = new PacoteDAO().selecionarPorCodigo(idSelecionado);
//            model.addRow(new Object[]{pacote.getNomeProduto(), pacote.getQtdProduto()});
//        }
    }//GEN-LAST:event_btnImprimirActionPerformed

//    private void atualizarTabelaProd() {   
//        try {
//            List<entity.Pacote> listaPacotes = new PacoteDAO().findOrcamentoIdPaco(idSelecionado);
//            TableModel tableModelPacotes = TableModelCreator.createTableModel(entity.Pacote.class, listaPacotes, null);
//            tblProduto.setModel(tableModelPacotes);
//        } catch (Exception ex) {
//
//        }
//    }
    
    private void abrirPDF(String caminho, String nomeArquivoPDF){
        try {
            File arquivo = new File(caminho + "/" + nomeArquivoPDF + ".pdf");
            Desktop.getDesktop().open(arquivo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Arquivo n√£o encontrado", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private boolean gerarPDF(String caminho, String nomeArquivoPDF) {
        try {
            PdfWriter writer = new PdfWriter(caminho + "/" + nomeArquivoPDF + ".pdf");
            PdfDocument pdf = new PdfDocument(writer);
            pdf.setTagged();
            pdf.setDefaultPageSize(PageSize.A4);

            Document documento = new Document(pdf);
            documento.setMargins(93, 36, 55, 36);

            Header header = new Header("Listagem de Eventos");
            Footer footer = new Footer();
            
            pdf.addEventHandler(PdfDocumentEvent.START_PAGE, header);
            pdf.addEventHandler(PdfDocumentEvent.END_PAGE, footer);
            
            /*Paragraph titulo = new Paragraph("Listagem dos Produtos");
            titulo.setBold();
            titulo.setFontSize(15);
            titulo.setTextAlignment(TextAlignment.CENTER);*/

            Table tabela = new Table(8);
            tabela.addCell("Id");
            tabela.addCell("Cliente");
            tabela.addCell("Tipo");
            tabela.addCell("Convidados");
            tabela.addCell("Local");
            tabela.addCell("Endere√ßo");
            tabela.addCell("Descri√ß√£o");
            tabela.addCell("Valor Final");
            for (int i = 0; i < tblEvento.getRowCount(); i++) {
                String id = tblEvento.getValueAt(i, 7).toString();
                String cliente = tblEvento.getValueAt(i, 6).toString();
                String tipo = tblEvento.getValueAt(i, 11).toString();
                String convidados = tblEvento.getValueAt(i, 0).toString();
                String local = tblEvento.getValueAt(i, 9).toString();
                String endereco = tblEvento.getValueAt(i, 5).toString();
                String descricao = tblEvento.getValueAt(i, 3).toString();
                String varlorFinal = tblEvento.getValueAt(i, 12).toString();
                tabela.addCell(id);
                tabela.addCell(cliente);
                tabela.addCell(tipo);
                tabela.addCell(convidados);
                tabela.addCell(local);
                tabela.addCell(endereco);
                tabela.addCell(descricao);
                tabela.addCell(varlorFinal);
            }
            
            //documento.add(titulo);
            documento.add(tabela);
            footer.writeTotal(pdf);
            documento.close();
            return true;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Evento.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }
    
    private void atualizarTabela() {
        try {
//            GenericDAO g = new GenericDAO<Object>();
//            List<entity.Orcamento> list = g.getEntityManager().createQuery("SELECT o.tipo, o.duracao FROM Orcamento o where o.id = 3").getResultList();
            List<entity.Orcamento> listaEventos = new OrcamentoDAO().selecionarTodos();
            TableModel tableModelEventos = TableModelCreator.createTableModel(entity.Orcamento.class, listaEventos, null);
            tblEvento.setModel(tableModelEventos);
        } catch (Exception ex) {

        }
    }
    
    private String selecionarPasta() {
        try {
            JFileChooser arquivo = new JFileChooser();
            arquivo.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            arquivo.showSaveDialog(this);
            return arquivo.getSelectedFile().getPath();
        } catch (Exception ex) {
            return "";
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Evento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Evento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Evento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Evento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Evento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConcluir;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnRegistros;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTable tblEvento;
    // End of variables declaration//GEN-END:variables
}
